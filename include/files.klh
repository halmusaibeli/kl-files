%ifndef files_h
%define files_h

%include namespace.m

%define prog_name files
%define prog_name_alias file

--access_typ can be 'RW', 'RO', 'AP', 'UD'
-- opts
declare_function(prog_name,open,prog_name_alias,open)
ROUTINE files__open(filename : STRING;  access_typ : STRING; fl : FILE) FROM files
declare_function(prog_name,close,prog_name_alias,close)
ROUTINE files__close(filename : STRING; fl : FILE) FROM files
declare_function(prog_name,check_open,prog_name_alias,chckopn)
ROUTINE files__check_open(filename : STRING; fl : FILE) FROM files
declare_function(prog_name,check_closed,prog_name_alias,chckcls)
ROUTINE files__check_closed(filename : STRING; fl : FILE) FROM files
declare_function(prog_name,check_rw,prog_name_alias,checkrw)
ROUTINE files__check_rw(filename : STRING; fl : FILE) FROM files
declare_function(prog_name,load_on_disk,prog_name_alias,load)
ROUTINE files__load_on_disk(filename : STRING ; overwrite : BOOLEAN) FROM files
declare_function(prog_name,create,prog_name_alias,create)
ROUTINE files__create(filename : STRING; fl : FILE) : BOOLEAN FROM files
declare_function(prog_name,clear,prog_name_alias,clear)
ROUTINE files__clear(filename : STRING; fl : FILE) FROM files
--read
declare_function(prog_name,read_line,prog_name_alias,rdline)
ROUTINE files__read_line(filename : STRING; fl : FILE) : STRING FROM files
declare_function(prog_name,read_to_sarr,prog_name_alias,r_sarr)
ROUTINE files__read_to_sarr(filename : STRING;  fl : FILE; out : ARRAY[*] OF STRING ; break_str: STRING) : BOOLEAN FROM files
--write
declare_function(prog_name,write,prog_name_alias,write)
ROUTINE files__write(str : STRING; filename : STRING; fl : FILE) FROM files
declare_function(prog_name,write_from_pipe,prog_name_alias,wrtfpip)
ROUTINE files__write_from_pipe(pipname : STRING; pip_fl : FILE;  &
                        filename : STRING; write_fl : FILE) FROM files
declare_function(prog_name,write_to_display,prog_name_alias,wrtdisp)
ROUTINE files__write_to_display(filename : STRING;  fl : FILE) FROM files

--type check
declare_function(prog_name,is_LS,prog_name_alias,is_LS)
ROUTINE files__is_LS(filename : STRING;  fl : FILE) : BOOLEAN FROM files

%endif --files_h
